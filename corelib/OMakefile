########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: build_corelib install uninstall clean

########################################################################
#

CORE_SRC_FILES = $(find src -name *.rill)
CORE_SRC_EXT_FILES = $(find src_ext -name *.cpp)

CORE_SRC_TARGET_FILES = $(CORE_SRC_FILES) $(CORE_SRC_EXT_FILES)
CORE_SRC_TARGET_OBJS = $(replacesuffixes .rill .cpp, .o .o, $(CORE_SRC_TARGET_FILES))

LIBNAME = librillcore-rt

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

.SUBDIRS: src/core
    %.o: %.rill $(RILLC_BIN)
        $(RILLC_BIN) -c $< --no-corelib --no-stdlib --system-lib $(dir src) -o $@

    clean:
        rm -f *~ *.o *.ll *.bc

.SUBDIRS: src_ext
    %.o: %.cpp
        $(CXX) -std=c++14 -fPIC -c $+ -o $@

    clean:
        rm -f *~ *.o

.DEFAULT: lib/$(LIBNAME).a

########################################################################
#

build_corelib: lib/$(LIBNAME).a

lib/$(LIBNAME).a: $(CORE_SRC_TARGET_OBJS)
    prepare-directory(lib)
    rm-if-exists($@)
    $(AR $@) $+

install: lib/$(LIBNAME).a
    # copy srcs
    prepare-directory($(INCLUDE_DIR)/rill)
    foreach(x => ..., $(filter %.rill, $(CORE_SRC_FILES)))
        src = $(removeprefix src/, $(x))
        target_dir = $(INCLUDE_DIR)/rill/$(dirname $(src))
        prepare-directory($(target_dir))
        cp -v $(x) $(target_dir)/.
    # copy libs
    prepare-directory($(LIB_DIR))
    cp -v lib/$(LIBNAME).a $(LIB_DIR)/.

uninstall:
    # remove srcs
    foreach(x => ..., $(ls src))
        if $(test -e $(INCLUDE_DIR)/rill/$(basename $x))
            rm-if-exists($(INCLUDE_DIR)/rill/$(basename $x))
    rmdir-if-empty($(INCLUDE_DIR)/rill)
    # remove libs
    rm-if-exists($(LIB_DIR)/$(LIBNAME).a)

clean:
    rm -f *~ *.opt *.cmi *.cmx *.cmxa *.o *.omc *.a *.out *.s *.bc *.log *.cache
    rm-if-exists(lib)
