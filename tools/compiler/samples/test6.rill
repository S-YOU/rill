def main(): int
{
    ret_struct();

    val t: TestClass2 = TestClass2();
    val t1 = t.f();

    t1.pf();


    return 0;
}

extern def mutable( val a :type ) onlymeta: type "rill_core_typesystem_mutable";
extern def const( val a :type ) onlymeta: type "rill_core_typesystem_const";
extern def immutable( val a :type ) onlymeta: type "rill_core_typesystem_immutable";
extern def is_mutable( val a :type ) onlymeta: bool "rill_core_typesystem_is_mutable";
extern def p( val i :int ): void "print_int32";
extern def p( val i :bool ): void "print_bool";
extern def p( val i :ptr!(int8) ): void "print_bytes";

def ret_struct(): TestClass
{
    val a = TestClass();
    return a;
}

class TestClass
{
    def ctor()
    {
        this.a = 10;
    }

    def pf(): void
    {
        p( this.a );
    }

    val a: int;
    val b: int;
}

class TestClass2
{
    def ctor()
    {}

    def f(): mutable(TestClass)
    {
        val a = TestClass();
        return a;
    }

    val a: int;
    val b: int;
}