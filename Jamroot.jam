#
# Copyright yutopp 2013 - .
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)
#

import os ; 
import path ;

####################
####################
echo "==================================================" ;
echo "= Rill ===========================================" ;
echo "==================================================" ;


####################
####################
# Rill path
path-constant rill-root : . ;


####################
####################
# Boost path
path-constant boost-root : [ os.environ BOOST_ROOT ] ;
use-project /boost : $(boost-root) ;


####################
####################
# LLVM path

##########
#
rule chomp ( string ) 
{ 
   local match = [ MATCH "^(.*)[\r\n]+$" : $(string) ] ;
   if $(match) {
       return $(match[1]) ;
   } else {
       return $(string) ;
   }
} 

##########
#
if [ os.environ RILL_LLVM_ROOT ] {
    path-constant llvm-root : [ os.environ RILL_LLVM_ROOT ] ;
} else {
    path-constant llvm-root : /usr/lib/llvm-3.3 ;
    ECHO "LLVM (used default root-path parameter)" ;
}

#
if [ os.environ RILL_LLVM_BIN ] {
    path-constant llvm-bin : [ os.environ RILL_LLVM_BIN ] ;
} else {
    path-constant llvm-bin : $(llvm-root)/bin ;
}

#
if [ os.environ RILL_LLVM_CONFIG ] {
    path-constant llvm-config : [ os.environ RILL_LLVM_CONFIG ] ;
} else {
    path-constant llvm-config : $(llvm-bin)/llvm-config ;
}

#
if [ os.environ RILL_LLVM_INCLUDE ] {
    path-constant llvm-include : [ os.environ RILL_LLVM_INCLUDE ] ;
} else {
    path-constant llvm-include : [ chomp [ SHELL "$(llvm-config) --includedir" ] ] ;
}

#
if [ os.environ RILL_LLVM_LIB ] {
    path-constant llvm-lib : [ os.environ RILL_LLVM_LIB ] ;
} else {
    path-constant llvm-lib : [ chomp [ SHELL "$(llvm-config) --libdir" : eol-delimited-output ] ] ;
}

#
path-constant llvm-static-lib : [ SPLIT_BY_CHARACTERS [ chomp [ SHELL "$(llvm-config) --libfiles" ] ] : " " ] ;
constant llvm-libs : [ SPLIT_BY_CHARACTERS [ chomp [ SHELL "$(llvm-config) --libs" ] ] : " " ] ;

#
constant llvm-cxxflags : [ SPLIT_BY_CHARACTERS [ chomp [ SHELL "$(llvm-config) --cxxflags" ] ] : " " ] ;

#
ECHO "LLVM_ROOT \t -> $(llvm-root)" ;
ECHO "LLVM_BIN \t -> $(llvm-bin)" ;
ECHO "LLVM_INCLUDE \t -> $(llvm-include)" ;
ECHO "LLVM_LIB \t -> $(llvm-lib)" ;

echo <file>$(llvm-static-lib) ;

lib llvm
    :
    : <file>$(llvm-static-lib) ;


####################
####################

echo "==================================================" ;

####################
####################
# project
project rill
    : requirements
        <warnings>all
        <define>BOOST_ALL_NO_LIB

        <link>static
        <link>shared:<define>BOOST_ALL_DYN_LINK=1
        <link>static:<define>BOOST_All_STATIC_LINK=1
        <include>$(boost-root)
        <include>$(rill-root)
        <toolset>gcc:<cxxflags>-Wextra
        <toolset>gcc:<cxxflags>-Wno-unused-local-typedefs
        <toolset>gcc:<cxxflags>-Wno-unused-parameter
        <toolset>gcc:<cxxflags>-pedantic
        <toolset>gcc:<cxxflags>-std=c++11
        <toolset>clang:<cxxflags>-Wextra
        <toolset>clang:<cxxflags>-Wno-unused-parameter
        <toolset>clang:<cxxflags>-pedantic
        <toolset>clang:<cxxflags>-std=c++11
        <toolset>clang:<cxxflags>-fcolor-diagnostics
    : build-dir
        ./stage
    ;