########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

.PHONY: build_stdlib install uninstall clean

########################################################################
#

STD_SRC_FILES = $(find src -name *.rill)
STD_SRC_EXT_FILES = $(find src_ext -name *.c)

STD_SRC_TARGET_FILES = $(STD_SRC_FILES) $(STD_SRC_EXT_FILES)
STD_SRC_TARGET_OBJS = $(replacesuffixes .rill .c, .o .o, $(STD_SRC_TARGET_FILES))

LIBNAME = librillstd-rt
CFLAGS += -fPIC -nostdlib -std=c11

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

CORE_LIB_SRC_DIR = $(dir ../corelib/src)
CORE_LIB_LIB_DIR = $(dir ../corelib/lib)
STD_LIB_SRC_DIR = $(dir src)
.SUBDIRS: src/std
    %.o: %.rill build_rillc build_corelib
        $(RILLC_BIN) -c $< --no-stdlib --system-lib $(CORE_LIB_SRC_DIR) \
                                       -L $(CORE_LIB_LIB_DIR) \
                                       --system-lib $(STD_LIB_SRC_DIR) -o $@

    clean:
        rm -f *~ *.o *.ll *.bc *.out

.SUBDIRS: src_ext
    %.o: %.c
        $(CC) $(CFLAGS) -c $< -o $@

    clean:
        rm -f *~ *.o *.out

.DEFAULT: build_stdlib

########################################################################
#

build_stdlib: lib/$(LIBNAME).a lib/$(LIBNAME).so

lib/$(LIBNAME).a: $(STD_SRC_TARGET_OBJS)
    prepare-directory(lib)
    rm-if-exists($@)
    $(AR $@) $+

lib/$(LIBNAME).so: $(STD_SRC_TARGET_OBJS)
    prepare-directory(lib)
    rm-if-exists($@)
    $(CC) --shared $+ -o $@

install: lib/$(LIBNAME).a lib/$(LIBNAME).so
    # copy srcs
    prepare-directory($(INCLUDE_DIR)/rill)
    foreach(x => ..., $(filter %.rill, $(STD_SRC_FILES)))
        src = $(removeprefix src/, $(x))
        target_dir = $(INCLUDE_DIR)/rill/$(dirname $(src))
        prepare-directory($(target_dir))
        cp -v $(x) $(target_dir)/.
    # copy libs
    prepare-directory($(LIB_DIR))
    cp -v lib/$(LIBNAME).a $(LIB_DIR)/.
    cp -v lib/$(LIBNAME).so $(LIB_DIR)/.

uninstall:
    # remove srcs
    foreach(x => ..., $(ls src))
        if $(test -e $(INCLUDE_DIR)/rill/$(basename $x))
            rm-if-exists($(INCLUDE_DIR)/rill/$(basename $x))
    # remove libs
    rmdir-if-empty($(INCLUDE_DIR)/rill)

clean:
    rm -f *~ *.opt *.cmi *.cmx *.cmxa *.o *.omc *.a *.out *.s *.bc *.log *.cache
    rm-if-exists(lib)
