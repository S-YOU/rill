########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakeroot file.
# You will not normally need to modify this file.
# By default, your changes should be placed in the
# OMakefile in this directory.
#
# If you decide to modify this file, note that it uses exactly
# the same syntax as the OMakefile.
#

#
# Include the standard installed configuration files.
# Any of these can be deleted if you are not using them,
# but you probably want to keep the Common file.
#
open build/C
open build/OCaml

#
# The command-line variables are defined *after* the
# standard configuration has been loaded.
#
DefineCommandVars()

#
.STATIC:
    ConfMsgChecking(release mode)
    export RELEASE
    if $(not $(defined RELEASE))
        RELEASE = false
    RELEASE = $(RELEASE)
    ConfMsgResult($(RELEASE))

    ConfMsgChecking(use local dev lib)
    export USE_LOCAL_DEV_LIB
    if $(not $(defined USE_LOCAL_DEV_LIB))
        if $(equal $(RELEASE), true)
            USE_LOCAL_DEV_LIB = false
        else
            USE_LOCAL_DEV_LIB = true
    USE_LOCAL_DEV_LIB = $(USE_LOCAL_DEV_LIB)
    ConfMsgResult($(USE_LOCAL_DEV_LIB))

    ConfMsgChecking(take coverage)
    export COVERAGE
    if $(not $(defined COVERAGE))
        COVERAGE = false
    COVERAGE = $(COVERAGE)
    ConfMsgResult($(COVERAGE))

    ConfMsgChecking(prefix)
    export PREFIX
    if $(not $(defined PREFIX))
        PREFIX = $(dir /usr/local)
    PREFIX = $(dir $(PREFIX))
    ConfMsgResult($(PREFIX))

    ConfMsgChecking(bin dir)
    export BIN_DIR
    if $(not $(defined BIN_DIR))
        BIN_DIR = $(PREFIX)/bin
    BIN_DIR = $(dir $(BIN_DIR))
    ConfMsgResult($(BIN_DIR))

    ConfMsgChecking(lib dir)
    export LIB_DIR
    if $(not $(defined LIB_DIR))
        LIB_DIR = $(PREFIX)/lib
    LIB_DIR = $(dir $(LIB_DIR))
    ConfMsgResult($(LIB_DIR))

    ConfMsgChecking(include dir)
    export INCLUDE_DIR
    if $(not $(defined INCLUDE_DIR))
        INCLUDE_DIR = $(PREFIX)/include
    INCLUDE_DIR = $(dir $(INCLUDE_DIR))
    ConfMsgResult($(INCLUDE_DIR))

RILLC_BIN = $(file rillc/src/rillc)

prepare-directory(dir) =
   if $(not $(file-exists $(dir)))
      mkdir -p $(dir)

rm-if-exists(path) =
   if $(file-exists $(path))
      rm -rv $(path)

rmdir-if-empty(dir) =
   if $(equal $(length $(ls $(dir))), 0)
      rmdir -rv $(dir)

#
# Include the OMakefile in this directory.
#
.SUBDIRS: .
